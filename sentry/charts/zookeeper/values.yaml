affinity: {}
args: []
auth:
  clientPassword: ""
  clientUser: ""
  enabled: false
  existingSecret: ""
  serverPasswords: ""
  serverUsers: ""
autopurge:
  purgeInterval: 0
  snapRetainCount: 3
clusterDomain: cluster.local
command:
- /scripts/setup.sh
commonAnnotations: {}
commonLabels: {}
configuration: ""
containerPorts:
  client: 2181
  election: 3888
  follower: 2888
  tls: 3181
containerSecurityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 1001
customLivenessProbe: {}
customReadinessProbe: {}
customStartupProbe: {}
dataLogDir: ""
diagnosticMode:
  args:
  - infinity
  command:
  - sleep
  enabled: false
existingConfigmap: ""
extraDeploy: []
extraEnvVars: []
extraEnvVarsCM: ""
extraEnvVarsSecret: ""
extraVolumeMounts: []
extraVolumes: []
fourlwCommandsWhitelist: srvr, mntr, ruok
fullnameOverride: ""
global:
  imagePullSecrets: []
  imageRegistry: ""
  storageClass: ""
heapSize: 1024
hostAliases: []
image:
  debug: false
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: bitnami/zookeeper
  tag: 3.8.0-debian-10-r0
initContainers: []
initLimit: 10
jvmFlags: ""
kubeVersion: ""
lifecycleHooks: {}
listenOnAllIPs: false
livenessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 30
  periodSeconds: 10
  probeCommandTimeout: 2
  successThreshold: 1
  timeoutSeconds: 5
logLevel: ERROR
maxClientCnxns: 60
maxSessionTimeout: 40000
metrics:
  containerPort: 9141
  enabled: false
  prometheusRule:
    additionalLabels: {}
    enabled: false
    namespace: ""
    rules: []
  service:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: '{{ .Values.metrics.service.port }}'
      prometheus.io/scrape: "true"
    port: 9141
    type: ClusterIP
  serviceMonitor:
    additionalLabels: {}
    enabled: false
    honorLabels: false
    interval: ""
    jobLabel: ""
    metricRelabelings: []
    namespace: ""
    relabelings: []
    scrapeTimeout: ""
    selector: {}
minServerId: 1
nameOverride: ""
namespaceOverride: ""
networkPolicy:
  allowExternal: true
  enabled: false
nodeAffinityPreset:
  key: ""
  type: ""
  values: []
nodeSelector: {}
pdb:
  create: false
  maxUnavailable: 1
  minAvailable: ""
persistence:
  accessModes:
  - ReadWriteOnce
  annotations: {}
  dataLogDir:
    existingClaim: ""
    selector: {}
    size: 8Gi
  enabled: true
  existingClaim: ""
  selector: {}
  size: 8Gi
  storageClass: ""
podAffinityPreset: ""
podAnnotations: {}
podAntiAffinityPreset: soft
podLabels: {}
podManagementPolicy: Parallel
podSecurityContext:
  enabled: true
  fsGroup: 1001
preAllocSize: 65536
priorityClassName: ""
readinessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 5
  periodSeconds: 10
  probeCommandTimeout: 2
  successThreshold: 1
  timeoutSeconds: 5
replicaCount: 1
resources:
  limits: {}
  requests:
    cpu: 250m
    memory: 256Mi
schedulerName: ""
service:
  annotations: {}
  clusterIP: ""
  disableBaseClientPort: false
  externalTrafficPolicy: Cluster
  extraPorts: []
  headless:
    annotations: {}
    publishNotReadyAddresses: true
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  nodePorts:
    client: ""
    tls: ""
  ports:
    client: 2181
    election: 3888
    follower: 2888
    tls: 3181
  sessionAffinity: None
  type: ClusterIP
serviceAccount:
  annotations: {}
  automountServiceAccountToken: true
  create: false
  name: ""
sidecars: []
snapCount: 100000
startupProbe:
  enabled: false
  failureThreshold: 15
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
syncLimit: 5
tickTime: 2000
tls:
  client:
    autoGenerated: false
    enabled: false
    existingSecret: ""
    keystorePassword: ""
    keystorePath: /opt/bitnami/zookeeper/config/certs/client/zookeeper.keystore.jks
    passwordsSecretName: ""
    truststorePassword: ""
    truststorePath: /opt/bitnami/zookeeper/config/certs/client/zookeeper.truststore.jks
  quorum:
    autoGenerated: false
    enabled: false
    existingSecret: ""
    keystorePassword: ""
    keystorePath: /opt/bitnami/zookeeper/config/certs/quorum/zookeeper.keystore.jks
    passwordsSecretName: ""
    truststorePassword: ""
    truststorePath: /opt/bitnami/zookeeper/config/certs/quorum/zookeeper.truststore.jks
  resources:
    limits: {}
    requests: {}
tolerations: []
topologySpreadConstraints: {}
updateStrategy:
  rollingUpdate: {}
  type: RollingUpdate
volumePermissions:
  containerSecurityContext:
    runAsUser: 0
  enabled: false
  image:
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r368
  resources:
    limits: {}
    requests: {}
